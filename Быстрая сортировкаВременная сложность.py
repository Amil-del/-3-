Если массив содержит 0 или 1 элемент, он уже отсортирован, и работа занимает константное время. Выбор центрального элемента массива занимает постоянное время. Создание трёх списков (элементов меньше, равных и больших опорного) требует прохода по всему массиву размером n. Быстрая сортировка рекурсивно применяется к двум частям массива. Лучший случай: Если массив идеально разделяется на две приблизительно равные части на каждом шаге, глубина рекурсии составит log(n), а на каждом уровне потребуется линейное время O(n). Итого получаем:
O(n*log(n)). Средний случай: В большинстве случаев алгоритм ведет себя аналогично лучшему случаю, обеспечивая среднее время:
O(n*log(n)). Однако возникает худший случай, если массив уже отсортирован или почти отсортирован, и каждый раз выбирается минимальный/максимальный элемент в качестве опорного. Тогда на каждом шаге одна из частей становится пустой, а другая содержит n - 1 элементов. Глубина рекурсии достигает n, и каждое действие требует линейного времени O(n). Итого получается квадратичное время: 
O(n^2).

