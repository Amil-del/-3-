//Пример кода для алгоритма сортировки выбором на C++

#include <iostream>   // Подключаем библиотеку ввода-вывода

using namespace std;  // Используем пространство имен std, чтобы избежать записи std:: перед каждым стандартным объектом

void selectionSort(int arr[], int n) {  // Функция сортировки массива методом выбора
    for (int i = 0; i < n - 1; ++i) {  // Проходим по массиву до предпоследнего элемента
        int minIndex = i;               // Предполагаем, что минимальный элемент находится на текущей позиции
        
        // Ищем реальный минимальный элемент среди оставшихся элементов справа от текущего индекса
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex]) {  // Если нашли меньший элемент, обновляем индекс минимального элемента
                minIndex = j;
            }
        }
    
        // Меняем местами найденный минимальный элемент с элементом на текущей позиции
        swap(arr[i], arr[minIndex]);      // Используем встроенную функцию swap() для перестановки значений
    }
}

// Основная программа
int main() {
    const int SIZE = 8;                  // Размер массива фиксированный, хотя лучше было бы сделать динамическим
    int array[] = {64, 25, 12, 22, 11}; // Исходный несортированный массив
    
    cout << "Исходный массив: ";
    for (int i = 0; i < SIZE; ++i) {     // Вывод исходного массива
        cout << array[i] << " ";
    }
    cout << endl;
    
    selectionSort(array, SIZE);          // Сортируем массив функцией selectionSort()
    
    cout << "Отсортированный массив: ";
    for (int i = 0; i < SIZE; ++i) {     // Вывод отсортированного массива
        cout << array[i] << " ";
    }
    cout << endl;
    
    return 0;                           // Завершаем программу успешно
}
//Пример вывода
//Исходный массив: 64 25 12 22 11 
//Отсортированный массив: 11 12 22 25 64 